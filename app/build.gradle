apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'
android {
    compileSdkVersion 26
    buildToolsVersion '26.0.3'
    defaultConfig {
        applicationId "com.ericho.ultradribble"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 3
        versionName "1.0.2"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }
    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
    }

    signingConfigs{
//        beta{
//            storeFile file(APK_KEYSTORE_FILE)
//            storePassword APK_KEYSTORE_PASSWORD
//            keyAlias APK_KEY_ALIAS
//            keyPassword APK_KEY_PASSWORD
//        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.beta
        }
    }

}
ext{
    retrofit2Version = '2.3.0'
    okhttp3Version = '3.9.0'
    ankoLibVersion = "0.10.1"
    rxkotlinVersion = '2.1.0'
    rxAndroidVersion = '2.0.1'
    glideVersion = "4.1.1"
    flexboxVersion = "0.3.0-alpha4"
    supportLibraryVersion = '26.1.0'
    archRoomVersion = '1.0.0-alpha9-1'
    deeplinkDispatchVersion = "3.1.0"
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Support series
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:preference-v14:$supportLibraryVersion"
    implementation "com.android.support:palette-v7:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.android.support:customtabs:$supportLibraryVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    // Retrofit series
    implementation "com.squareup.retrofit2:retrofit:$retrofit2Version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2Version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit2Version"
    //okhttp3
    implementation "com.squareup.okhttp3:okhttp:$okhttp3Version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3Version"
    //rxJava
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlinVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    // Anko lib
    implementation "org.jetbrains.anko:anko-commons:$ankoLibVersion"
    // Anko Layouts
    implementation "org.jetbrains.anko:anko-sdk25:$ankoLibVersion" // sdk15, sdk19, sdk21, sdk23 are also available
    implementation "org.jetbrains.anko:anko-appcompat-v7:$ankoLibVersion"
    // FlexBox layout
    implementation "com.google.android:flexbox:$flexboxVersion"
    // Room
    implementation "android.arch.persistence.room:runtime:$archRoomVersion"
    implementation "android.arch.persistence.room:rxjava2:$archRoomVersion"
    kapt "android.arch.persistence.room:compiler:$archRoomVersion"
    implementation "android.arch.persistence.room:testing:$archRoomVersion"

    // DeepLink dispatch
    implementation "com.airbnb:deeplinkdispatch:$deeplinkDispatchVersion"
    kapt "com.airbnb:deeplinkdispatch-processor:$deeplinkDispatchVersion"

    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.jakewharton.timber:timber:4.5.1'


    androidTestImplementation "com.google.code.findbugs:jsr305:3.0.1"
    implementation('com.crashlytics.sdk.android:crashlytics:2.7.0@aar') {
        transitive = true;
    }


    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
    androidTestUtil 'com.android.support.test:orchestrator:1.0.1'

    // Espresso dependencies
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-accessibility:3.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-web:3.0.1'
    androidTestImplementation 'com.android.support.test.espresso.idling:idling-concurrent:3.0.1'

    // The following Espresso dependency can be either "compile"
    // or "androidTestCompile", depending on your app's implementation
    androidTestImplementation 'com.android.support.test.espresso:espresso-idling-resource:3.0.1'
    
}

